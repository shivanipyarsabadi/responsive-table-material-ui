{"version":3,"sources":["App.module.css","component/Table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CustTable","useState","id","fName","lName","phone","email","place","studentData","classes","makeStyles","theme","root","backgroundColor","overflow","responsiveTable","table","border","width","height","margin","breakpoints","down","thead","display","tbody","td","paddingRight","paddingLeft","borderBottom","position","whiteSpace","textAlign","top","left","fontWeight","content","th","color","thr","tbr","h3","h4","text","link","alignItems","useStyles","createMuiTheme","responsiveFontSizes","className","Typography","variant","Table","TableHead","TableRow","TableCell","TableBody","map","row","key","data-title","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sIACAA,EAAOC,QAAU,CAAC,IAAM,mB,6OC4LTC,EAxLG,WACd,IADoB,EA2BEC,mBAzBlB,CAAC,CACGC,GAAI,IACJC,MAAO,QACPC,MAAO,UACPC,MAAO,aACPC,MAAO,kBACPC,MAAO,aAEX,CACIL,GAAI,IACJC,MAAO,QACPC,MAAO,SACPC,MAAO,aACPC,MAAO,kBACPC,MAAO,aAEX,CACIL,GAAI,IACJC,MAAO,SACPC,MAAO,QACPC,MAAO,aACPC,MAAO,mBACPC,MAAO,YAGRC,EA3Ba,oBAyIdC,EA5GYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,gBAAiB,OACjBC,SAAU,UAEdC,gBAAiB,GAGjBC,MAAM,aACFC,OAAQ,kBACRJ,gBAAiB,sBACjBC,SAAU,SACVI,MAAO,MACPC,OAAQ,MACRC,OAAQ,SACPT,EAAMU,YAAYC,KAAK,MAAQ,CAE5BR,SAAU,WAGlBS,MAAM,aACFN,OAAQ,mBACPN,EAAMU,YAAYC,KAAK,MAAQ,CAC5BE,QAAS,QACTP,OAAQ,SAGhBQ,MAAM,eACDd,EAAMU,YAAYC,KAAK,MAAQ,CAC5BE,QAAS,QACTP,OAAQ,SAGhBS,GAAG,aACCT,OAAQ,kBACRU,aAAc,EACdC,YAAa,GACZjB,EAAMU,YAAYC,KAAK,MAAQ,CAC5BL,OAAQ,OACRO,QAAS,QACTK,aAAc,iBACdC,SAAU,WACVF,YAAa,MACbG,WAAY,SACZC,UAAW,OACX,WAAY,CACRF,SAAU,WACVG,IAAK,MACLC,KAAM,MACNhB,MAAO,MACPS,aAAc,OACdI,WAAY,SACZC,UAAW,OACXG,WAAY,OACZlB,OAAQ,QAEZ,YAAa,CAAEmB,QAAS,sBAIhCC,GAAG,aACCxB,gBAAiB,QACjByB,MAAO,QACPH,WAAY,OACZlB,OAAQ,kBACRU,aAAc,EACdC,YAAa,GAEZjB,EAAMU,YAAYC,KAAK,MAAQ,CAC5BL,OAAQ,OACRO,QAAS,UAGjBe,IAAI,eACC5B,EAAMU,YAAYC,KAAK,MAAQ,CAC5BE,QAAS,QACTM,SAAU,WACVG,IAAK,UACLC,KAAM,UACNjB,OAAQ,SAGhBuB,IAAI,eACC7B,EAAMU,YAAYC,KAAK,MAAQ,CAC5BL,OAAQ,OACRO,QAAS,QACTK,aAAc,oBAGtBY,GAAI,CACArB,OAAQ,SAEZsB,GAAI,CACAtB,OAAQ,QACRY,UAAW,QAEfW,KAAM,CACFvB,OAAQ,QACRY,UAAW,QAEfY,KAAM,CACFxB,OAAQ,QACRY,UAAW,OACXa,WAAY,WAKJC,GAEZnC,EAAQoC,cACZpC,EAAQqC,YAAoBrC,GAO5B,OACI,yBAAKsC,UAAWxC,EAAQG,MACpB,yBAAKqC,UAAWxC,EAAQM,iBACpB,kBAAC,IAAD,CAAkBJ,MAAOA,GACrB,kBAACuC,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWxC,EAAQgC,IAA5C,IAVA,sDAWA,kBAACS,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWxC,EAAQiC,IAV9C,UAWE,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,YAAYF,UAAWxC,EAAQkC,MAVrD,oCAWE,kBAACS,EAAA,EAAD,CAAOH,UAAWxC,EAAQO,OACtB,kBAACqC,EAAA,EAAD,CAAWJ,UAAWxC,EAAQc,OAC1B,kBAAC+B,EAAA,EAAD,CAAUL,UAAWxC,EAAQ8B,KACzB,kBAACgB,EAAA,EAAD,CAAWN,UAAWxC,EAAQ4B,IAA9B,gBACA,kBAACkB,EAAA,EAAD,CAAWN,UAAWxC,EAAQ4B,IAA9B,eACA,kBAACkB,EAAA,EAAD,CAAWN,UAAWxC,EAAQ4B,IAA9B,kBACA,kBAACkB,EAAA,EAAD,CAAWN,UAAWxC,EAAQ4B,IAA9B,cACA,kBAACkB,EAAA,EAAD,CAAWN,UAAWxC,EAAQ4B,IAA9B,YAGR,kBAACmB,EAAA,EAAD,CAAWP,UAAWxC,EAAQgB,OACzBjB,EAAYiD,KAAI,SAAAC,GAAG,OAChB,kBAACJ,EAAA,EAAD,CAAUK,IAAKD,EAAIxD,GAAI+C,UAAWxC,EAAQ+B,KACtC,kBAACe,EAAA,EAAD,CAAWK,aAAW,aAAaX,UAAWxC,EAAQiB,IAAKgC,EAAIvD,OAC/D,kBAACoD,EAAA,EAAD,CAAWK,aAAW,YAAYX,UAAWxC,EAAQiB,IAAKgC,EAAItD,OAC9D,kBAACmD,EAAA,EAAD,CAAWK,aAAW,eAAeX,UAAWxC,EAAQiB,IAAKgC,EAAIrD,OACjE,kBAACkD,EAAA,EAAD,CAAWK,aAAW,WAAWX,UAAWxC,EAAQiB,IAAKgC,EAAIpD,OAC7D,kBAACiD,EAAA,EAAD,CAAWK,aAAW,OAAOX,UAAWxC,EAAQiB,IAAKgC,EAAInD,eAOjF,kBAAC2C,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWxC,EAAQiC,IAlChC,8CAmCZ,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,YAAYF,UAAWxC,EAAQkC,MAlC3C,mC,iBC1ILkB,MARf,WACE,OACE,yBAAKZ,UAAWxC,IAAQoD,KACtB,kBAAC,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.738251bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__604o6\"};","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport { createMuiTheme, responsiveFontSizes, MuiThemeProvider, Typography } from '@material-ui/core';\r\n\r\nconst CustTable = () => {\r\n    const Data =\r\n        [{\r\n            id: '1',\r\n            fName: 'Aisha',\r\n            lName: 'Khurana',\r\n            phone: \"8125******\",\r\n            email: \"Aisha@gmail.com\",\r\n            place: \"Bangalore\"\r\n        },\r\n        {\r\n            id: '2',\r\n            fName: 'Rishi',\r\n            lName: 'Shetty',\r\n            phone: \"8125******\",\r\n            email: \"Rishi@gmail.com\",\r\n            place: \"Hyderabad\"\r\n        },\r\n        {\r\n            id: '3',\r\n            fName: 'Shikha',\r\n            lName: 'Gupta',\r\n            phone: \"8178******\",\r\n            email: \"Shikha@gmail.com\",\r\n            place: \"Mumbai\"\r\n        }];\r\n\r\n    const [studentData] = useState(Data);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            backgroundColor: 'pink',\r\n            overflow: 'hidden',\r\n        },\r\n        responsiveTable: {\r\n\r\n        },\r\n        table: {\r\n            border: '1px solid black',\r\n            backgroundColor: ' rgb(253, 212, 212)',\r\n            overflow: 'hidden',\r\n            width: '90%',\r\n            height: '90%',\r\n            margin: '5% 5%',\r\n            [theme.breakpoints.down('xs')]: {\r\n\r\n                overflow: 'hidden',\r\n            },\r\n        },\r\n        thead: {\r\n            border: '1px solid black',\r\n            [theme.breakpoints.down('xs')]: {\r\n                display: 'block',\r\n                border: 'none',\r\n            },\r\n        },\r\n        tbody: {\r\n            [theme.breakpoints.down('xs')]: {\r\n                display: 'block',\r\n                border: 'none'\r\n            },\r\n        },\r\n        td: {\r\n            border: '1px solid black',\r\n            paddingRight: 4,\r\n            paddingLeft: 5,\r\n            [theme.breakpoints.down('xs')]: {\r\n                border: 'none',\r\n                display: 'block',\r\n                borderBottom: \"1px solid #eee\",\r\n                position: \"relative\",\r\n                paddingLeft: \"50%\",\r\n                whiteSpace: \"normal\",\r\n                textAlign: \"left\",\r\n                \"&:before\": {\r\n                    position: 'absolute',\r\n                    top: '6px',\r\n                    left: '6px',\r\n                    width: '45%',\r\n                    paddingRight: '10px',\r\n                    whiteSpace: 'nowrap',\r\n                    textAlign: 'left',\r\n                    fontWeight: 'bold',\r\n                    border: 'none',\r\n                },\r\n                \"&::before\": { content: 'attr(data-title)', }\r\n            },\r\n        },\r\n\r\n        th: {\r\n            backgroundColor: 'black',\r\n            color: 'white',\r\n            fontWeight: 'bold',\r\n            border: '1px solid black',\r\n            paddingRight: 4,\r\n            paddingLeft: 5,\r\n\r\n            [theme.breakpoints.down('xs')]: {\r\n                border: 'none',\r\n                display: 'block'\r\n            },\r\n        },\r\n        thr: {\r\n            [theme.breakpoints.down('xs')]: {\r\n                display: 'block',\r\n                position: 'absolute',\r\n                top: \"-9999px\",\r\n                left: \"-9999px\",\r\n                border: 'none',\r\n            }\r\n        },\r\n        tbr: {\r\n            [theme.breakpoints.down('xs')]: {\r\n                border: 'none',\r\n                display: 'block',\r\n                borderBottom: '2px solid black'\r\n            },\r\n        },\r\n        h3: {\r\n            margin: '5% 5%',\r\n        },\r\n        h4: {\r\n            margin: '5% 5%',\r\n            textAlign: 'left'\r\n        },\r\n        text: {\r\n            margin: '5% 5%',\r\n            textAlign: 'left'\r\n        },\r\n        link: {\r\n            margin: '5% 5%',\r\n            textAlign: 'left',\r\n            alignItems: 'left'\r\n        }\r\n\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    let theme = createMuiTheme();\r\n    theme = responsiveFontSizes(theme);\r\n    const heading = 'Responsive table using React hooks and Material UI';\r\n    const tryme = 'Try Me'\r\n    const label = 'Resize your browser window width';\r\n    const instalation = 'Install Material UI with the below command';\r\n    const install = 'npm install @material-ui/core';\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.responsiveTable}>\r\n                <MuiThemeProvider theme={theme}>\r\n                    <Typography variant='h3' className={classes.h3}> {heading}</Typography >\r\n                    <Typography variant='h4' className={classes.h4}>{tryme}</Typography>\r\n                    <Typography variant='subtitle1' className={classes.text}>{label}</Typography>\r\n                    <Table className={classes.table}>\r\n                        <TableHead className={classes.thead}>\r\n                            <TableRow className={classes.thr}>\r\n                                <TableCell className={classes.th}> First Name </TableCell>\r\n                                <TableCell className={classes.th}> Last Name </TableCell>\r\n                                <TableCell className={classes.th}> Phone Number </TableCell>\r\n                                <TableCell className={classes.th}> Email Id </TableCell>\r\n                                <TableCell className={classes.th}> City </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody className={classes.tbody}>\r\n                            {studentData.map(row => (\r\n                                <TableRow key={row.id} className={classes.tbr}>\r\n                                    <TableCell data-title='First Name' className={classes.td}>{row.fName}</TableCell>\r\n                                    <TableCell data-title='Last Name' className={classes.td}>{row.lName}</TableCell>\r\n                                    <TableCell data-title='Phone Number' className={classes.td}>{row.phone}</TableCell>\r\n                                    <TableCell data-title='Email ID' className={classes.td}>{row.email}</TableCell>\r\n                                    <TableCell data-title='City' className={classes.td}>{row.place}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </MuiThemeProvider>\r\n            </div>\r\n            <Typography variant='h4' className={classes.h4}>{instalation}</Typography>\r\n            <Typography variant='subtitle1' className={classes.text}>{install}</Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustTable;","import React from 'react';\nimport CustTable from './component/Table'\nimport classes from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={classes.App}>\n      <CustTable />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}